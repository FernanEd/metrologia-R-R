{"version":3,"sources":["logic/calculator.js","App.js","index.js"],"names":["promedio","arreglo","reduce","a","b","length","redondear","n","decimales","Math","round","App","useState","datos","setDatos","currentR","setCurrentR","currentEquipos","setCurrentEquipos","currentN","setCurrentN","currentT","currentK1","currentK2","currentRR","setCurrentRR","onClick","newDatos","push","forEach","equipo","operador","medida","operadores","map","medidas","equipos","objLiteral","obtenerPromedios","medicion","obtenerRangos","max","min","fabOperador","newRR","T","N","R","K1","K2","RANGOS","promedios","XD","repetitibilidad","cocientes","reproducibilidad","sqrt","RR","x","obtenerRR","className","Array","i","operadorIndx","j","onChange","e","valor","Number","console","log","handleInput","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72991ad.chunk.js","sourcesContent":["function fabOperador(medidas) {\n  let equipos = [...medidas];\n\n  const objLiteral = () => equipos;\n\n  const obtenerRangos = () =>\n    equipos.map((medicion) => {\n      return redondear(Math.max(...medicion) - Math.min(...medicion));\n    });\n\n  const obtenerPromedios = () => equipos.map((medicion) => promedio(medicion));\n\n  return { objLiteral, obtenerPromedios, obtenerRangos };\n}\n\nfunction promedio(arreglo) {\n  return arreglo.reduce((a, b) => a + b, 0) / arreglo.length;\n}\n\nfunction obtenerRR({ T, N, R, K1, K2, operadores }) {\n  const RANGOS = promedio(\n    operadores.map((operador) => promedio(operador.obtenerRangos()))\n  );\n\n  let promedios = operadores.map((operador) =>\n    promedio(operador.obtenerPromedios())\n  );\n\n  const XD = redondear(Math.max(...promedios) - Math.min(...promedios), 2);\n\n  const repetitibilidad = redondear((K1 * RANGOS) / T);\n\n  const cocientes = (K2 * XD) ** 2 - (K1 * RANGOS) ** 2 / (N * R);\n\n  const reproducibilidad = cocientes > 0 ? Math.sqrt(cocientes) / T : 0;\n\n  const RR = Math.sqrt(repetitibilidad ** 2 + reproducibilidad ** 2);\n\n  return { RR, repetitibilidad, reproducibilidad, x: promedios };\n}\n\nfunction redondear(n, decimales = 4) {\n  return Math.round(n * 10 ** decimales) / 10 ** decimales;\n}\n\nexport { fabOperador, obtenerRR, redondear };\n","import { useState } from 'react';\nimport { fabOperador, obtenerRR, redondear } from './logic/calculator';\n\nexport default function App() {\n  //Data de las mediciones // 1 operador con 1 equipo con 1 medida\n  let [datos, setDatos] = useState([[[0]]]);\n\n  //Cuantos arreglos hay\n  let [currentR, setCurrentR] = useState(1);\n  //Longitud d\n  let [currentEquipos, setCurrentEquipos] = useState(1);\n  //Ensayos\n  let [currentN, setCurrentN] = useState(1);\n\n  let [currentT, setCurrentT] = useState(15);\n  let [currentK1, setCurrentK1] = useState(2.21);\n  let [currentK2, setCurrentK2] = useState(2.7);\n\n  let [currentRR, setCurrentRR] = useState({});\n\n  function addOperador() {\n    let newR = currentR;\n    setCurrentR(newR + 1);\n\n    //Añadiendo un equipo default\n    let newDatos = datos;\n    newDatos.push([[0]]);\n    setDatos(newDatos);\n  }\n\n  function addEquipo() {\n    let newEquipos = currentEquipos;\n    setCurrentEquipos(newEquipos + 1);\n\n    //Añadiendo un espacio para medida default\n    let newDatos = datos;\n    newDatos.forEach((equipo) => equipo.push([0]));\n    setDatos(newDatos);\n  }\n\n  function addEnsayo(operador) {\n    let newN = currentN;\n    setCurrentN(newN + 1);\n\n    //Añadiendo una medida default\n    let newDatos = datos;\n    newDatos.forEach((equipo) => equipo.forEach((medida) => medida.push(0)));\n    setDatos(newDatos);\n  }\n\n  function handleInput(valor, operador, equipo, medida) {\n    let newDatos = datos;\n    newDatos[operador][equipo][medida] = Number(valor);\n    setDatos(newDatos);\n\n    console.log(datos);\n  }\n\n  function calcularRR() {\n    let operadores = datos.map((medidas) => fabOperador(medidas));\n\n    let newRR = obtenerRR({\n      T: currentT,\n      N: currentN,\n      R: currentR,\n      K1: currentK1,\n      K2: currentK2,\n      operadores,\n    });\n\n    setCurrentRR(newRR);\n  }\n\n  return (\n    <div>\n      <button onClick={addOperador}>Añadir operador</button>\n      <button onClick={addEquipo}>Añadir equipo</button>\n      <button onClick={addEnsayo}>Añadir ensayo</button>\n      <button onClick={calcularRR}>Calcular R&R</button>\n\n      {currentRR.RR}\n\n      <div className=\"operador-wrapper\">\n        <div className=\"operador-equipos\">\n          {[...Array(currentEquipos)].map((equipo, i) => {\n            return (\n              <div className=\"operador-equipo\" key={i}>\n                <div className=\"operador-equipo-title\">Equipo {i + 1}</div>\n              </div>\n            );\n          })}\n        </div>\n\n        {[...Array(currentR)].map((operador, operadorIndx) => {\n          return (\n            <div className=\"operador-card\" key={operadorIndx}>\n              <div className=\"operador-title\">Operador {operadorIndx + 1}</div>\n\n              {[...Array(currentEquipos)].map((equipo, i) => {\n                return (\n                  <div className=\"operador-medidas\" key={i}>\n                    {[...Array(currentN)].map((medida, j) => {\n                      return (\n                        <div key={j}>\n                          <input\n                            onChange={(e) =>\n                              handleInput(e.target.value, operadorIndx, i, j)\n                            }\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
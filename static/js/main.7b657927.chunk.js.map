{"version":3,"sources":["logic/calculator.js","App.js","index.js"],"names":["promedio","arreglo","reduce","a","b","length","redondear","n","decimales","Math","round","App","useState","datos","setDatos","currentR","setCurrentR","currentEquipos","setCurrentEquipos","currentN","setCurrentN","currentT","currentK1","currentK2","RR","repetitibilidad","reproducibilidad","currentRR","setCurrentRR","className","undefined","onClick","newDatos","newOperador","Array","newEquipo","push","forEach","equipo","operador","medida","operadores","map","medidas","equipos","objLiteral","obtenerPromedios","medicion","obtenerRangos","max","min","fabOperador","newRR","T","N","R","K1","K2","RANGOS","promedios","XD","cocientes","sqrt","x","obtenerRR","i","operadorIndx","j","onChange","e","valor","Number","console","log","handleInput","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b657927.chunk.js","sourcesContent":["function fabOperador(medidas) {\n  let equipos = [...medidas];\n\n  const objLiteral = () => equipos;\n\n  const obtenerRangos = () =>\n    equipos.map((medicion) => {\n      return redondear(Math.max(...medicion) - Math.min(...medicion));\n    });\n\n  const obtenerPromedios = () => equipos.map((medicion) => promedio(medicion));\n\n  return { objLiteral, obtenerPromedios, obtenerRangos };\n}\n\nfunction promedio(arreglo) {\n  return arreglo.reduce((a, b) => a + b, 0) / arreglo.length;\n}\n\nfunction obtenerRR({ T, N, R, K1, K2, operadores }) {\n  const RANGOS = promedio(\n    operadores.map((operador) => promedio(operador.obtenerRangos()))\n  );\n\n  let promedios = operadores.map((operador) =>\n    promedio(operador.obtenerPromedios())\n  );\n\n  const XD = redondear(Math.max(...promedios) - Math.min(...promedios), 2);\n\n  const repetitibilidad = redondear((K1 * RANGOS) / T);\n\n  const cocientes = (K2 * XD) ** 2 - (K1 * RANGOS) ** 2 / (N * R);\n\n  const reproducibilidad = cocientes > 0 ? Math.sqrt(cocientes) / T : 0;\n\n  const RR = Math.sqrt(repetitibilidad ** 2 + reproducibilidad ** 2);\n\n  return { RR, repetitibilidad, reproducibilidad, x: promedios };\n}\n\nfunction redondear(n, decimales = 4) {\n  return Math.round(n * 10 ** decimales) / 10 ** decimales;\n}\n\nexport { fabOperador, obtenerRR, redondear };\n","import { useState } from 'react';\nimport { fabOperador, obtenerRR, redondear } from './logic/calculator';\n\nexport default function App() {\n  //Data de las mediciones // 1 operador con 1 equipo con 1 medida\n  let [datos, setDatos] = useState([[[0]]]);\n\n  //Cuantos arreglos hay\n  let [currentR, setCurrentR] = useState(1);\n  //Longitud d\n  let [currentEquipos, setCurrentEquipos] = useState(1);\n  //Ensayos\n  let [currentN, setCurrentN] = useState(1);\n\n  let [currentT, setCurrentT] = useState(15);\n  let [currentK1, setCurrentK1] = useState(2.21);\n  let [currentK2, setCurrentK2] = useState(2.7);\n\n  let [currentRR, setCurrentRR] = useState({\n    RR: 0,\n    repetitibilidad: 0,\n    reproducibilidad: 0,\n  });\n\n  function addOperador() {\n    let newR = currentR;\n    setCurrentR(newR + 1);\n\n    //Añadiendo un equipo default\n    let newDatos = datos;\n    let newOperador = [];\n\n    for (let i of Array(currentEquipos)) {\n      let newEquipo = [];\n      for (let i of Array(currentN)) {\n        newEquipo.push(0);\n      }\n      newOperador.push(newEquipo);\n    }\n\n    newDatos.push(newOperador);\n    setDatos(newDatos);\n  }\n\n  function addEquipo() {\n    let newEquipos = currentEquipos;\n    setCurrentEquipos(newEquipos + 1);\n\n    //Añadiendo un espacio para medida default\n    let newDatos = datos;\n    newDatos.forEach((equipo) => equipo.push([0]));\n    setDatos(newDatos);\n  }\n\n  function addEnsayo(operador) {\n    let newN = currentN;\n    setCurrentN(newN + 1);\n\n    //Añadiendo una medida default\n    let newDatos = datos;\n    newDatos.forEach((equipo) => equipo.forEach((medida) => medida.push(0)));\n    setDatos(newDatos);\n  }\n\n  function handleInput(valor, operador, equipo, medida) {\n    let newDatos = datos;\n    newDatos[operador][equipo][medida] = Number(valor);\n    setDatos(newDatos);\n\n    console.log(datos);\n  }\n\n  function calcularRR() {\n    let operadores = datos.map((medidas) => fabOperador(medidas));\n\n    let newRR = obtenerRR({\n      T: currentT,\n      N: currentN,\n      R: currentR,\n      K1: currentK1,\n      K2: currentK2,\n      operadores,\n    });\n\n    setCurrentRR(newRR);\n  }\n\n  return (\n    <div>\n      <div className=\"app-resultados\">\n        <div className=\"resultados-wrapper\">\n          <div className=\"resultado\">\n            <div className=\"resultado-label\">RR</div>\n            <div className=\"resultado-content\">\n              {currentRR.RR != undefined &&\n                `${redondear(currentRR.RR * 100, 2)}%`}\n            </div>\n          </div>\n          <div className=\"resultado\">\n            <div className=\"resultado-label\">Repetitibilidad</div>\n            <div className=\"resultado-content\">\n              {currentRR.RR != undefined &&\n                `${redondear(currentRR.repetitibilidad * 100, 2)}%`}\n            </div>\n          </div>\n          <div className=\"resultado\">\n            <div className=\"resultado-label\">Reproducibilidad</div>\n            <div className=\"resultado-content\">\n              {currentRR.RR != undefined &&\n                `${redondear(currentRR.reproducibilidad * 100, 2)}%`}\n            </div>\n          </div>\n        </div>\n        <div className=\"rr-rating\">\n          <div className=\"rr-rating-title\">Good enough.</div>\n          <div className=\"rr-rating-desc\">\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Maxime\n            fugit ratione modi, amet possimus atque. Dolorum commodi similique\n            maiores quas unde dolores, quasi itaque et recusandae architecto\n            totam voluptatem odit?\n          </div>\n        </div>\n      </div>\n\n      <div className=\"app-controls\">\n        <button className=\"btn btn-warning\" onClick={addOperador}>\n          Añadir operador\n        </button>\n        <button className=\"btn btn-warning\" onClick={addEquipo}>\n          Añadir equipo\n        </button>\n        <button className=\"btn btn-warning\" onClick={addEnsayo}>\n          Añadir ensayo\n        </button>\n        <button className=\"btn btn-success\" onClick={calcularRR}>\n          Calcular R&R\n        </button>\n      </div>\n\n      <div className=\"app-content\">\n        <table className=\"main-table\">\n          <tbody>\n            <tr>\n              <td className=\"equipo-td\"></td>\n              {[...Array(currentEquipos)].map((equipo, i) => (\n                <td className=\"equipo-td\" key={i}>\n                  <div>Equipo {i + 1}</div>\n                </td>\n              ))}\n            </tr>\n\n            {[...Array(currentR)].map((operador, operadorIndx) => (\n              <tr className=\"operador-tr\" key={operadorIndx}>\n                <td className=\"operador-td\">\n                  <div>Operador {operadorIndx + 1}</div>\n                </td>\n\n                {[...Array(currentEquipos)].map((equipo, i) => (\n                  <td className=\"medidas-td\" key={i}>\n                    <div className=\"medidas-container\">\n                      {[...Array(currentN)].map((medida, j) => (\n                        <td key={j}>\n                          <input\n                            onChange={(e) =>\n                              handleInput(e.target.value, operadorIndx, i, j)\n                            }\n                          />\n                        </td>\n                      ))}\n                    </div>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/*\n      <div className=\"operador-wrapper\">\n        <div className=\"operador-equipos\">\n          {[...Array(currentEquipos)].map((equipo, i) => {\n            return (\n              <div className=\"operador-equipo\" key={i}>\n                <div className=\"operador-equipo-title\">Equipo {i + 1}</div>\n              </div>\n            );\n          })}\n        </div>\n\n        {[...Array(currentR)].map((operador, operadorIndx) => {\n          return (\n            <div className=\"operador-card\" key={operadorIndx}>\n              <div className=\"operador-title\">Operador {operadorIndx + 1}</div>\n\n              {[...Array(currentEquipos)].map((equipo, i) => {\n                return (\n                  <div className=\"operador-medidas\" key={i}>\n                    {[...Array(currentN)].map((medida, j) => {\n                      return (\n                        <div key={j}>\n                          <input\n                            onChange={(e) =>\n                              handleInput(e.target.value, operadorIndx, i, j)\n                            }\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      */}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
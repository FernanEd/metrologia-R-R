{"version":3,"sources":["logic/calculator.js","App.js","index.js"],"names":["promedio","arreglo","reduce","a","b","length","redondear","n","decimales","Math","round","App","useState","datos","setDatos","currentR","setCurrentR","currentEquipos","setCurrentEquipos","currentN","setCurrentN","currentT","setCurrentT","RR","repetitibilidad","reproducibilidad","currentRR","setCurrentRR","isCalculated","setIsCalculated","obtenerK1","obtenerK2","className","undefined","htmlFor","onChange","e","target","value","onClick","newDatos","newOperador","Array","newEquipo","push","forEach","equipo","operador","medida","operadores","map","medidas","equipos","objLiteral","obtenerPromedios","medicion","obtenerRangos","max","min","fabOperador","newRR","T","N","R","K1","K2","RANGOS","promedios","XD","cocientes","sqrt","x","obtenerRR","i","operadorIndx","j","valor","Number","console","log","handleInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c35e176.chunk.js","sourcesContent":["function fabOperador(medidas) {\n  let equipos = [...medidas];\n\n  const objLiteral = () => equipos;\n\n  const obtenerRangos = () =>\n    equipos.map((medicion) => {\n      return redondear(Math.max(...medicion) - Math.min(...medicion));\n    });\n\n  const obtenerPromedios = () => equipos.map((medicion) => promedio(medicion));\n\n  return { objLiteral, obtenerPromedios, obtenerRangos };\n}\n\nfunction promedio(arreglo) {\n  return arreglo.reduce((a, b) => a + b, 0) / arreglo.length;\n}\n\nfunction obtenerRR({ T, N, R, K1, K2, operadores }) {\n  const RANGOS = promedio(\n    operadores.map((operador) => promedio(operador.obtenerRangos()))\n  );\n\n  let promedios = operadores.map((operador) =>\n    promedio(operador.obtenerPromedios())\n  );\n\n  const XD = redondear(Math.max(...promedios) - Math.min(...promedios), 2);\n\n  const repetitibilidad = redondear((K1 * RANGOS) / T);\n\n  const cocientes = (K2 * XD) ** 2 - (K1 * RANGOS) ** 2 / (N * R);\n\n  const reproducibilidad = cocientes > 0 ? Math.sqrt(cocientes) / T : 0;\n\n  const RR = Math.sqrt(repetitibilidad ** 2 + reproducibilidad ** 2);\n\n  return { RR, repetitibilidad, reproducibilidad, x: promedios };\n}\n\nfunction redondear(n, decimales = 4) {\n  return Math.round(n * 10 ** decimales) / 10 ** decimales;\n}\n\nexport { fabOperador, obtenerRR, redondear };\n","import { useState } from 'react';\nimport { fabOperador, obtenerRR, redondear } from './logic/calculator';\n\nexport default function App() {\n  //Data de las mediciones // 1 operador con 1 equipo con 1 medida\n  let [datos, setDatos] = useState([[[0, 0]], [[0, 0]]]);\n  //Cuantos operadores hay\n  let [currentR, setCurrentR] = useState(2);\n\n  //Cuantos equipos hay\n  let [currentEquipos, setCurrentEquipos] = useState(1);\n\n  //Cuantos ensayos hay\n  let [currentN, setCurrentN] = useState(2);\n\n  let [currentT, setCurrentT] = useState(1);\n\n  let [currentRR, setCurrentRR] = useState({\n    RR: 0,\n    repetitibilidad: 0,\n    reproducibilidad: 0,\n  });\n\n  let [isCalculated, setIsCalculated] = useState(false);\n\n  function addOperador() {\n    let newR = currentR;\n    setCurrentR(newR + 1);\n\n    //Añadiendo un equipo default\n    let newDatos = datos;\n    let newOperador = [];\n\n    for (let i of Array(currentEquipos)) {\n      let newEquipo = [];\n      for (let i of Array(currentN)) {\n        newEquipo.push(0);\n      }\n      newOperador.push(newEquipo);\n    }\n\n    newDatos.push(newOperador);\n    setDatos(newDatos);\n  }\n\n  function addEquipo() {\n    let newEquipos = currentEquipos;\n    setCurrentEquipos(newEquipos + 1);\n\n    //Añadiendo un espacio para medida default\n    let newDatos = datos;\n    newDatos.forEach((equipo) => equipo.push([0]));\n    setDatos(newDatos);\n  }\n\n  function addEnsayo(operador) {\n    let newN = currentN;\n    setCurrentN(newN + 1);\n\n    //Añadiendo una medida default\n    let newDatos = datos;\n    newDatos.forEach((equipo) => equipo.forEach((medida) => medida.push(0)));\n    setDatos(newDatos);\n  }\n\n  function handleInput(valor, operador, equipo, medida) {\n    let newDatos = datos;\n    newDatos[operador][equipo][medida] = Number(valor);\n    setDatos(newDatos);\n\n    console.log(datos);\n  }\n\n  function calcularRR() {\n    let operadores = datos.map((medidas) => fabOperador(medidas));\n\n    let newRR = obtenerRR({\n      T: currentT,\n      N: currentN,\n      R: currentR,\n      K1: obtenerK1(),\n      K2: obtenerK2(),\n      operadores,\n    });\n\n    setCurrentRR(newRR);\n    setIsCalculated(true);\n  }\n\n  function obtenerK1() {\n    switch (currentN) {\n      case 5:\n        return 2.21;\n      case 4:\n        return 2.5;\n      case 3:\n        return 3.05;\n      case 2:\n        return 4.56;\n    }\n  }\n\n  function obtenerK2() {\n    switch (currentR) {\n      case 5:\n        return 2.08;\n      case 4:\n        return 2.3;\n      case 3:\n        return 2.7;\n      case 2:\n        return 3.65;\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"app-resultados\">\n        <div className=\"resultados-wrapper\">\n          <div className=\"resultado\">\n            <div className=\"resultado-label\">RR</div>\n            <div className=\"resultado-content\">\n              {currentRR.RR != undefined &&\n                `${redondear(currentRR.RR * 100, 2)}%`}\n            </div>\n          </div>\n          <div className=\"resultado\">\n            <div className=\"resultado-label\">Repetitibilidad</div>\n            <div className=\"resultado-content\">\n              {currentRR.RR != undefined &&\n                `${redondear(currentRR.repetitibilidad * 100, 2)}%`}\n            </div>\n          </div>\n          <div className=\"resultado\">\n            <div className=\"resultado-label\">Reproducibilidad</div>\n            <div className=\"resultado-content\">\n              {currentRR.RR != undefined &&\n                `${redondear(currentRR.reproducibilidad * 100, 2)}%`}\n            </div>\n          </div>\n        </div>\n        <div className=\"rr-rating\">\n          <div className=\"rr-rating-title\"></div>\n          <div className=\"rr-rating-desc\">\n            {isCalculated && currentRR.RR * 100 < 10\n              ? 'El sistema de medición es aceptable.'\n              : currentRR.RR * 100 >= 10 && currentRR.RR * 100 < 30\n              ? 'El sistema de medición es aceptable según su uso, aplicación o costo del instrumento de medición.'\n              : currentRR.RR * 100 >= 30\n              ? 'El sistema de medicion no es aceptable.'\n              : 'Resultados.'}\n          </div>\n        </div>\n      </div>\n      <div className=\"app-controls\">\n        <div className=\"app-controls-inputs\">\n          <div className=\"control-input\">\n            <label htmlFor=\"\">Tolerancia</label>\n            <input onChange={(e) => setCurrentT(e.target.value)} />\n          </div>\n        </div>\n        <div className=\"app-controls-buttons\">\n          <button\n            className=\"btn btn-warning\"\n            onClick={currentR < 5 ? addOperador : null}\n          >\n            Añadir operador\n          </button>\n          <button className=\"btn btn-warning\" onClick={addEquipo}>\n            Añadir equipo\n          </button>\n          <button\n            className=\"btn btn-warning\"\n            onClick={currentN < 5 ? addEnsayo : null}\n          >\n            Añadir ensayo\n          </button>\n          <button className=\"btn btn-success\" onClick={calcularRR}>\n            Calcular R&R\n          </button>\n        </div>\n      </div>\n\n      <div className=\"app-content\">\n        <table className=\"main-table\">\n          <tbody>\n            <tr>\n              <td className=\"equipo-td\"></td>\n              {[...Array(currentEquipos)].map((equipo, i) => (\n                <td className=\"equipo-td\" key={i}>\n                  <div>Equipo {i + 1}</div>\n                </td>\n              ))}\n            </tr>\n\n            {[...Array(currentR)].map((operador, operadorIndx) => (\n              <tr className=\"operador-tr\" key={operadorIndx}>\n                <td className=\"operador-td\">\n                  <div>Operador {operadorIndx + 1}</div>\n                </td>\n\n                {[...Array(currentEquipos)].map((equipo, i) => (\n                  <td className=\"medidas-td\" key={i}>\n                    <div className=\"medidas-container\">\n                      {[...Array(currentN)].map((medida, j) => (\n                        <td key={j}>\n                          <input\n                            onChange={(e) =>\n                              handleInput(e.target.value, operadorIndx, i, j)\n                            }\n                          />\n                        </td>\n                      ))}\n                    </div>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/*\n      <div className=\"operador-wrapper\">\n        <div className=\"operador-equipos\">\n          {[...Array(currentEquipos)].map((equipo, i) => {\n            return (\n              <div className=\"operador-equipo\" key={i}>\n                <div className=\"operador-equipo-title\">Equipo {i + 1}</div>\n              </div>\n            );\n          })}\n        </div>\n\n        {[...Array(currentR)].map((operador, operadorIndx) => {\n          return (\n            <div className=\"operador-card\" key={operadorIndx}>\n              <div className=\"operador-title\">Operador {operadorIndx + 1}</div>\n\n              {[...Array(currentEquipos)].map((equipo, i) => {\n                return (\n                  <div className=\"operador-medidas\" key={i}>\n                    {[...Array(currentN)].map((medida, j) => {\n                      return (\n                        <div key={j}>\n                          <input\n                            onChange={(e) =>\n                              handleInput(e.target.value, operadorIndx, i, j)\n                            }\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      */}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}